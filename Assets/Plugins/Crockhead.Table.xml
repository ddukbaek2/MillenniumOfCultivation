<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Crockhead.Table</name>
    </assembly>
    <members>
        <member name="T:ExampleTable">
            <summary>
            샘플 테이블.
            </summary>
        </member>
        <member name="M:ExampleTable.OnCreate(System.Object[])">
            <summary>
            생성.
            </summary>
        </member>
        <member name="M:ExampleTable.OnDispose(System.Boolean)">
            <summary>
            해제됨.
            </summary>
        </member>
        <member name="T:ExampleTableRecord">
            <summary>
            ExampleTable Recordable Data.
            </summary>
        </member>
        <member name="P:ExampleTableRecord.Id">
            <summary>
            Id.
            </summary>
        </member>
        <member name="P:ExampleTableRecord.StringValue">
            <summary>
            StringValue.
            </summary>
        </member>
        <member name="P:ExampleTableRecord.FloatValue">
            <summary>
            FloatValue.
            </summary>
        </member>
        <member name="P:ExampleTableRecord.IntDictionaryValue">
            <summary>
            IntDictionaryValue.
            </summary>
        </member>
        <member name="P:ExampleTableRecord.StringListValue">
            <summary>
            StringListValue.
            </summary>
        </member>
        <member name="P:ExampleTableRecord.IntListValue">
            <summary>
            IntListValue.
            </summary>
        </member>
        <member name="P:ExampleTableRecord.EmptyIntDictionaryValue">
            <summary>
            EmptyIntDictionaryValue.
            </summary>
        </member>
        <member name="P:ExampleTableRecord.EmptyIntListValue">
            <summary>
            EmptyIntListValue.
            </summary>
        </member>
        <member name="P:ExampleTableRecord.BoolValue">
            <summary>
            BoolValue.
            </summary>
        </member>
        <member name="M:ExampleTableRecord.Crockhead#Table#IRecordable#GetFieldCount">
            <summary>
            필드 갯수.
            </summary>
        </member>
        <member name="M:ExampleTableRecord.Crockhead#Table#IRecordable#GetFieldName(System.Int32)">
            <summary>
            필드 이름.
            </summary>
        </member>
        <member name="M:ExampleTableRecord.Crockhead#Table#IRecordable#GetFieldType(System.Int32)">
            <summary>
            필드 타입.
            </summary>
        </member>
        <member name="M:ExampleTableRecord.Crockhead#Table#IRecordable#GetFieldValue(System.Int32)">
            <summary>
            필드 값.
            </summary>
        </member>
        <member name="T:Crockhead.Table.IRecordable">
            <summary>
            테이블 1건에 대한 데이터 인터페이스.
            </summary>
        </member>
        <member name="P:Crockhead.Table.IRecordable.Id">
            <summary>
            고유 식별자.
            </summary>
        </member>
        <member name="M:Crockhead.Table.IRecordable.GetFieldCount">
            <summary>
            필드 갯수.
            </summary>
        </member>
        <member name="M:Crockhead.Table.IRecordable.GetFieldName(System.Int32)">
            <summary>
            필드 이름.
            </summary>
        </member>
        <member name="M:Crockhead.Table.IRecordable.GetFieldType(System.Int32)">
            <summary>
            필드 타입.
            </summary>
        </member>
        <member name="M:Crockhead.Table.IRecordable.GetFieldValue(System.Int32)">
            <summary>
            필드 값.
            </summary>
        </member>
        <member name="T:Crockhead.Table.ITable">
            <summary>
            테이블 인터페이스.
            <para>기록 객체를 보관하는 컬렉션.</para>
            </summary>
        </member>
        <member name="P:Crockhead.Table.ITable.Count">
            <summary>
            레코드 갯수 프로퍼티.
            </summary>
        </member>
        <member name="M:Crockhead.Table.ITable.Clear">
            <summary>
            모든 레코드 제거.
            </summary>
        </member>
        <member name="M:Crockhead.Table.ITable.Add(Crockhead.Table.IRecordable)">
            <summary>
            레코드 추가.
            </summary>
        </member>
        <member name="M:Crockhead.Table.ITable.AddRange(System.Collections.Generic.IEnumerable{Crockhead.Table.IRecordable})">
            <summary>
            레코드 범위 추가.
            </summary>
        </member>
        <member name="M:Crockhead.Table.ITable.Remove(System.Int32)">
            <summary>
            레코드 제거.
            </summary>
        </member>
        <member name="M:Crockhead.Table.ITable.Contains(System.Int32)">
            <summary>
            레코드 포함 여부 반환.
            </summary>
        </member>
        <member name="M:Crockhead.Table.ITable.Contains(System.Predicate{Crockhead.Table.IRecordable})">
            <summary>
            레코드 포함 여부 반환.
            </summary>
        </member>
        <member name="M:Crockhead.Table.ITable.Find(System.Int32)">
            <summary>
            조건에 맞는 레코드 반환.
            </summary>
        </member>
        <member name="M:Crockhead.Table.ITable.Find(System.Predicate{Crockhead.Table.IRecordable})">
            <summary>
            조건에 맞는 레코드 반환.
            </summary>
        </member>
        <member name="M:Crockhead.Table.ITable.FindAll(System.Predicate{Crockhead.Table.IRecordable})">
            <summary>
            조건에 맞는 모든 레코드 반환.
            </summary>
        </member>
        <member name="M:Crockhead.Table.ITable.All">
            <summary>
            모든 레코드 반환.
            </summary>
        </member>
        <member name="T:Crockhead.Table.ITable`1">
            <summary>
            제네릭 테이블 인터페이스.
            <para>기록 객체를 보관하는 컬렉션.</para>
            </summary>
        </member>
        <member name="M:Crockhead.Table.ITable`1.Add(`0)">
            <summary>
            레코드 추가.
            </summary>
        </member>
        <member name="M:Crockhead.Table.ITable`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            레코드 범위 추가.
            </summary>
        </member>
        <member name="M:Crockhead.Table.ITable`1.Contains(System.Predicate{`0})">
            <summary>
            레코드 포함 여부 반환.
            </summary>
        </member>
        <member name="M:Crockhead.Table.ITable`1.Find(System.Int32)">
            <summary>
            조건에 맞는 레코드 반환.
            </summary>
        </member>
        <member name="M:Crockhead.Table.ITable`1.Find(System.Predicate{`0})">
            <summary>
            조건에 맞는 레코드 반환.
            </summary>
        </member>
        <member name="M:Crockhead.Table.ITable`1.FindAll(System.Predicate{`0})">
            <summary>
            조건에 맞는 모든 레코드 반환.
            </summary>
        </member>
        <member name="M:Crockhead.Table.ITable`1.All">
            <summary>
            모든 레코드 반환.
            </summary>
        </member>
        <member name="T:Crockhead.Table.Record">
            <summary>
            테이블에서 사용되는 1건의 기록 데이터.
            <para>IRecordable 인터페이스 구현체.</para>
            </summary>
        </member>
        <member name="P:Crockhead.Table.Record.Id">
            <summary>
            고유 식별자 프로퍼티.
            </summary>
        </member>
        <member name="M:Crockhead.Table.Record.Crockhead#Table#IRecordable#GetFieldCount">
            <summary>
            필드 갯수.
            </summary>
        </member>
        <member name="M:Crockhead.Table.Record.Crockhead#Table#IRecordable#GetFieldName(System.Int32)">
            <summary>
            필드 이름.
            </summary>
        </member>
        <member name="M:Crockhead.Table.Record.Crockhead#Table#IRecordable#GetFieldType(System.Int32)">
            <summary>
            필드 타입.
            </summary>
        </member>
        <member name="M:Crockhead.Table.Record.Crockhead#Table#IRecordable#GetFieldValue(System.Int32)">
            <summary>
            필드 값.
            </summary>
        </member>
        <member name="T:Crockhead.Table.Table">
            <summary>
            테이블.
            <para>기록 객체를 보관하는 컬렉션.</para>
            <para>모든 레코드는 동일 컬렉션안에서 정수형 고유식별자를 들고 있으며 해당 레코드의 고유식별자를 키로 사용.</para>
            <para>IEnumerable.Record 인터페이스 구현체.</para>
            </summary>
        </member>
        <member name="F:Crockhead.Table.Table.m_Records">
            <summary>
            레코드 목록.
            </summary>
        </member>
        <member name="P:Crockhead.Table.Table.Count">
            <summary>
            갯수 프로퍼티.
            </summary>
        </member>
        <member name="P:Crockhead.Table.Table.Values">
            <summary>
            레코드 목록 프로퍼티.
            </summary>
        </member>
        <member name="M:Crockhead.Table.Table.#ctor">
            <summary>
            생성됨.
            </summary>
        </member>
        <member name="M:Crockhead.Table.Table.OnDispose(System.Boolean)">
            <summary>
            해제됨.
            </summary>
        </member>
        <member name="M:Crockhead.Table.Table.Clear">
            <summary>
            모든 레코드 제거.
            </summary>
        </member>
        <member name="M:Crockhead.Table.Table.Add(Crockhead.Table.IRecordable)">
            <summary>
            레코드 추가.
            <para>고유식별자가 기존에 있는 경우는 교체.</para>
            </summary>
        </member>
        <member name="M:Crockhead.Table.Table.AddRange(System.Collections.Generic.IEnumerable{Crockhead.Table.IRecordable})">
            <summary>
            레코드 범위 추가.
            <para>고유식별자가 기존에 있는 경우는 교체.</para>
            </summary>
        </member>
        <member name="M:Crockhead.Table.Table.Remove(System.Int32)">
            <summary>
            레코드 제거.
            </summary>
        </member>
        <member name="M:Crockhead.Table.Table.Contains(System.Int32)">
            <summary>
            레코드 포함 여부 반환.
            </summary>
        </member>
        <member name="M:Crockhead.Table.Table.Contains(System.Predicate{Crockhead.Table.IRecordable})">
            <summary>
            레코드 포함 여부 반환.
            </summary>
        </member>
        <member name="M:Crockhead.Table.Table.Find(System.Int32)">
            <summary>
            조건에 맞는 레코드를 반환.
            </summary>
        </member>
        <member name="M:Crockhead.Table.Table.Find(System.Predicate{Crockhead.Table.IRecordable})">
            <summary>
            조건에 맞는 레코드를 반환.
            </summary>
        </member>
        <member name="M:Crockhead.Table.Table.FindAll(System.Predicate{Crockhead.Table.IRecordable})">
            <summary>
            조건에 맞는 모든 레코드를 반환.
            </summary>
        </member>
        <member name="M:Crockhead.Table.Table.All">
            <summary>
            모든 레코드 반환.
            </summary>
        </member>
        <member name="M:Crockhead.Table.Table.System#Collections#Generic#IEnumerable{Crockhead#Table#IRecordable}#GetEnumerator">
            <summary>
            열거 제공자 반환.
            <para>IEnumerable.Record 인터페이스 구현.</para>
            </summary>
        </member>
        <member name="M:Crockhead.Table.Table.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            열거 제공자 반환.
            <para>IEnumerable 인터페이스 구현.</para>
            </summary>
        </member>
        <member name="M:Crockhead.Table.Table.Create(Crockhead.Table.IRecordable[])">
            <summary>
            생성.
            </summary>
        </member>
        <member name="T:Crockhead.Table.Table`1">
            <summary>
            제너릭 테이블.
            <para>기록 객체를 보관하는 컬렉션.</para>
            <para>모든 레코드는 동일 컬렉션안에서 정수형 고유식별자를 들고 있으며 해당 레코드의 고유식별자를 키로 사용.</para>
            <para>ITable 인터페이스 구현체.</para>
            </summary>
        </member>
        <member name="F:Crockhead.Table.Table`1.m_Records">
            <summary>
            레코드 목록.
            </summary>
        </member>
        <member name="P:Crockhead.Table.Table`1.Count">
            <summary>
            갯수 프로퍼티.
            </summary>
        </member>
        <member name="M:Crockhead.Table.Table`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            생성됨.
            </summary>
        </member>
        <member name="M:Crockhead.Table.Table`1.OnDispose(System.Boolean)">
            <summary>
            해제됨.
            </summary>
        </member>
        <member name="M:Crockhead.Table.Table`1.Clear">
            <summary>
            모든 레코드 제거.
            </summary>
        </member>
        <member name="M:Crockhead.Table.Table`1.Add(`0)">
            <summary>
            레코드 추가.
            <para>고유식별자가 기존에 있는 경우는 교체.</para>
            </summary>
        </member>
        <member name="M:Crockhead.Table.Table`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            레코드 범위 추가.
            <para>고유식별자가 기존에 있는 경우는 교체.</para>
            </summary>
        </member>
        <member name="M:Crockhead.Table.Table`1.Remove(System.Int32)">
            <summary>
            레코드 제거.
            </summary>
        </member>
        <member name="M:Crockhead.Table.Table`1.Contains(System.Int32)">
            <summary>
            레코드 포함 여부 반환.
            </summary>
        </member>
        <member name="M:Crockhead.Table.Table`1.Contains(System.Predicate{`0})">
            <summary>
            레코드 포함 여부 반환.
            </summary>
        </member>
        <member name="M:Crockhead.Table.Table`1.Find(System.Int32)">
            <summary>
            조건에 맞는 레코드 반환.
            </summary>
        </member>
        <member name="M:Crockhead.Table.Table`1.Find(System.Predicate{`0})">
            <summary>
            조건에 맞는 레코드 반환.
            </summary>
        </member>
        <member name="M:Crockhead.Table.Table`1.FindAll(System.Predicate{`0})">
            <summary>
            조건에 맞는 모든 레코드 반환.
            </summary>
        </member>
        <member name="M:Crockhead.Table.Table`1.All">
            <summary>
            모든 레코드 반환.
            </summary>
        </member>
        <member name="M:Crockhead.Table.Table`1.Crockhead#Table#ITable#Add(Crockhead.Table.IRecordable)">
            <summary>
            레코드 추가.
            <para>ITable 인터페이스 구현.</para>
            </summary>
        </member>
        <member name="M:Crockhead.Table.Table`1.Crockhead#Table#ITable#AddRange(System.Collections.Generic.IEnumerable{Crockhead.Table.IRecordable})">
            <summary>
            레코드 범위 추가.
            <para>ITable 인터페이스 구현.</para>
            </summary>
        </member>
        <member name="M:Crockhead.Table.Table`1.Crockhead#Table#ITable#Contains(System.Predicate{Crockhead.Table.IRecordable})">
            <summary>
            레코드 포함 여부 반환.
            <para>ITable 인터페이스 구현.</para>
            </summary>
        </member>
        <member name="M:Crockhead.Table.Table`1.Crockhead#Table#ITable#Find(System.Int32)">
            <summary>
            조건에 맞는 레코드 반환.
            <para>ITable 인터페이스 구현.</para>
            </summary>
        </member>
        <member name="M:Crockhead.Table.Table`1.Crockhead#Table#ITable#Find(System.Predicate{Crockhead.Table.IRecordable})">
            <summary>
            조건에 맞는 레코드 반환.
            <para>ITable 인터페이스 구현.</para>
            </summary>
        </member>
        <member name="M:Crockhead.Table.Table`1.Crockhead#Table#ITable#FindAll(System.Predicate{Crockhead.Table.IRecordable})">
            <summary>
            조건에 맞는 모든 레코드 반환.
            <para>ITable 인터페이스 구현.</para>
            </summary>
        </member>
        <member name="M:Crockhead.Table.Table`1.Crockhead#Table#ITable#All">
            <summary>
            모든 레코드 반환.
            <para>ITable 인터페이스 구현.</para>
            </summary>
        </member>
        <member name="M:Crockhead.Table.Table`1.System#Collections#Generic#IEnumerable{TRecordable}#GetEnumerator">
            <summary>
            열거 제공자 반환.
            <para>IEnumerable.TRecordable 인터페이스 구현.</para>
            </summary>
        </member>
        <member name="M:Crockhead.Table.Table`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            열거 제공자 반환.
            <para>IEnumerable 인터페이스 구현.</para>
            </summary>
        </member>
        <member name="M:Crockhead.Table.Table`1.Create(`0[])">
            <summary>
            생성.
            </summary>
        </member>
        <member name="T:Crockhead.Table.IRecordArrayReader`1">
            <summary>
            레코드 배열 리더.
            </summary>
        </member>
        <member name="P:Crockhead.Table.IRecordArrayReader`1.Records">
            <summary>
            읽어들인 레코드 목록 프로퍼티.
            </summary>
        </member>
        <member name="M:Crockhead.Table.IRecordArrayReader`1.Read">
            <summary>
            읽기.
            </summary>
        </member>
        <member name="T:Crockhead.Table.RecordArrayFileReader`1">
            <summary>
            레코드 배열 파일 리더.
            </summary>
        </member>
        <member name="F:Crockhead.Table.RecordArrayFileReader`1.m_FilePath">
            <summary>
            경로.
            </summary>
        </member>
        <member name="F:Crockhead.Table.RecordArrayFileReader`1.m_Records">
            <summary>
            레코드 목록.
            </summary>
        </member>
        <member name="P:Crockhead.Table.RecordArrayFileReader`1.Records">
            <summary>
            읽어들인 레코드 목록 프로퍼티.
            </summary>
        </member>
        <member name="M:Crockhead.Table.RecordArrayFileReader`1.#ctor(System.Object)">
            <summary>
            생성됨.
            </summary>
        </member>
        <member name="M:Crockhead.Table.RecordArrayFileReader`1.#ctor(Crockhead.Core.FilePathAttribute)">
            <summary>
            생성됨.
            </summary>
        </member>
        <member name="M:Crockhead.Table.RecordArrayFileReader`1.#ctor(System.String)">
            <summary>
            생성됨.
            </summary>
        </member>
        <member name="M:Crockhead.Table.RecordArrayFileReader`1.OnDispose(System.Boolean)">
            <summary>
            해제됨.
            </summary>
        </member>
        <member name="M:Crockhead.Table.RecordArrayFileReader`1.InternalInitialize(System.String)">
            <summary>
            초기화.
            </summary>
        </member>
        <member name="M:Crockhead.Table.RecordArrayFileReader`1.InternalInitialize(Crockhead.Core.FilePathAttribute)">
            <summary>
            초기화.
            </summary>
        </member>
        <member name="M:Crockhead.Table.RecordArrayFileReader`1.Read">
            <summary>
            읽기.
            </summary>
        </member>
        <member name="T:Crockhead.Table.SharedTable`3">
            <summary>
            공유 테이블.
            </summary>
        </member>
        <member name="F:Crockhead.Table.SharedTable`3.m_Collection">
            <summary>
            컬렉션.
            </summary>
        </member>
        <member name="F:Crockhead.Table.SharedTable`3.m_TableClassName">
            <summary>
            테이블 클래스 타입 이름.
            </summary>
        </member>
        <member name="F:Crockhead.Table.SharedTable`3.m_Reader">
            <summary>
            리더.
            </summary>
        </member>
        <member name="F:Crockhead.Table.SharedTable`3.m_Logger">
            <summary>
            로거.
            </summary>
        </member>
        <member name="P:Crockhead.Table.SharedTable`3.Collection">
            <summary>
            컬렉션 프로퍼티.
            </summary>
        </member>
        <member name="P:Crockhead.Table.SharedTable`3.Reader">
            <summary>
            리더 프로퍼티.
            </summary>
        </member>
        <member name="P:Crockhead.Table.SharedTable`3.Logger">
            <summary>
            로거 프로퍼티.
            </summary>
        </member>
        <member name="M:Crockhead.Table.SharedTable`3.#ctor">
            <summary>
            생성됨.
            </summary>
        </member>
        <member name="M:Crockhead.Table.SharedTable`3.OnCreate(System.Object[])">
            <summary>
            생성됨.
            </summary>
        </member>
        <member name="M:Crockhead.Table.SharedTable`3.OnDispose(System.Boolean)">
            <summary>
            해제됨.
            </summary>
        </member>
        <member name="M:Crockhead.Table.SharedTable`3.OnLoad(`2)">
            <summary>
            로드.
            </summary>
        </member>
        <member name="M:Crockhead.Table.SharedTable`3.OnLoaded(System.Boolean)">
            <summary>
            테이블 로드 됨.
            </summary>
        </member>
        <member name="M:Crockhead.Table.SharedTable`3.SetReader(`2)">
            <summary>
            리더 설정.
            </summary>
        </member>
        <member name="M:Crockhead.Table.SharedTable`3.Load(`2)">
            <summary>
            로드.
            </summary>
        </member>
        <member name="M:Crockhead.Table.SharedTable`3.Load">
            <summary>
            로드.
            </summary>
        </member>
        <member name="M:Crockhead.Table.SharedTable`3.Find(System.Int32)">
            <summary>
            조건에 맞는 레코드 반환.
            </summary>
        </member>
        <member name="M:Crockhead.Table.SharedTable`3.Find(System.Predicate{`1})">
            <summary>
            조건에 맞는 레코드 반환.
            </summary>
        </member>
        <member name="M:Crockhead.Table.SharedTable`3.FindAll(System.Predicate{`1})">
            <summary>
            조건에 맞는 모든 레코드 반환.
            </summary>
        </member>
        <member name="M:Crockhead.Table.SharedTable`3.All">
            <summary>
            모든 레코드 반환.
            </summary>
        </member>
        <member name="T:Crockhead.Table.JsonDictionary`3">
            <summary>
            테이블 필드로 사용 가능한 딕셔너리.
            </summary>
        </member>
        <member name="T:Crockhead.Table.JsonDictionary`3.Converter">
            <summary>
            변환 처리기.
            </summary>
        </member>
        <member name="M:Crockhead.Table.JsonDictionary`3.Converter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,`0,System.Boolean,Newtonsoft.Json.JsonSerializer)">
            <summary>
            읽기.
            </summary>
        </member>
        <member name="M:Crockhead.Table.JsonDictionary`3.Converter.WriteJson(Newtonsoft.Json.JsonWriter,`0,Newtonsoft.Json.JsonSerializer)">
            <summary>
            쓰기.
            </summary>
        </member>
        <member name="T:Crockhead.Table.BoolDictionary">
            <summary>
            논리 사전 배열.
            </summary>
        </member>
        <member name="T:Crockhead.Table.StringDictionary">
            <summary>
            문자열 사전 배열.
            </summary>
        </member>
        <member name="T:Crockhead.Table.ShortDictionary">
            <summary>
            정수 사전 배열.
            </summary>
        </member>
        <member name="T:Crockhead.Table.IntDictionary">
            <summary>
            정수 사전 배열.
            </summary>
        </member>
        <member name="T:Crockhead.Table.LongDictionary">
            <summary>
            정수 사전 배열.
            </summary>
        </member>
        <member name="T:Crockhead.Table.FloatDictionary">
            <summary>
            실수 사전 배열.
            </summary>
        </member>
        <member name="T:Crockhead.Table.DoubleDictionary">
            <summary>
            실수 사전 배열.
            </summary>
        </member>
        <member name="T:Crockhead.Table.JsonList`2">
            <summary>
            테이블 필드로 사용 가능한 리스트.
            </summary>
        </member>
        <member name="T:Crockhead.Table.JsonList`2.Converter">
            <summary>
            변환 처리기.
            </summary>
        </member>
        <member name="M:Crockhead.Table.JsonList`2.Converter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,`0,System.Boolean,Newtonsoft.Json.JsonSerializer)">
            <summary>
            읽기.
            </summary>
        </member>
        <member name="M:Crockhead.Table.JsonList`2.Converter.WriteJson(Newtonsoft.Json.JsonWriter,`0,Newtonsoft.Json.JsonSerializer)">
            <summary>
            쓰기.
            </summary>
        </member>
        <member name="T:Crockhead.Table.BoolList">
            <summary>
            논리 목록.
            </summary>
        </member>
        <member name="T:Crockhead.Table.StringList">
            <summary>
            문자열 목록.
            </summary>
        </member>
        <member name="T:Crockhead.Table.ShortList">
            <summary>
            정수 목록.
            </summary>
        </member>
        <member name="T:Crockhead.Table.IntList">
            <summary>
            정수 목록.
            </summary>
        </member>
        <member name="T:Crockhead.Table.LongList">
            <summary>
            정수 목록.
            </summary>
        </member>
        <member name="T:Crockhead.Table.FloatList">
            <summary>
            실수 목록.
            </summary>
        </member>
        <member name="T:Crockhead.Table.DoubleList">
            <summary>
            실수 목록.
            </summary>
        </member>
        <member name="T:Crockhead.Table.DataTable">
            <summary>
            데이터 테이블.
            </summary>
        </member>
        <member name="P:Crockhead.Table.DataTable.Group">
            <summary>
            그룹.
            </summary>
        </member>
        <member name="P:Crockhead.Table.DataTable.Name">
            <summary>
            이름.
            </summary>
        </member>
        <member name="P:Crockhead.Table.DataTable.Fields">
            <summary>
            필드 목록.
            </summary>
        </member>
        <member name="P:Crockhead.Table.DataTable.Types">
            <summary>
            타입 목록.
            </summary>
        </member>
        <member name="P:Crockhead.Table.DataTable.Records">
            <summary>
            레코드 목록.
            </summary>
        </member>
        <member name="M:Crockhead.Table.DataTable.#ctor">
            <summary>
            생성됨.
            </summary>
        </member>
        <member name="T:Crockhead.Table.DataTableWritter">
            <summary>
            테이블 생성기.
            <para>ExcelDataReader 기반.</para>
            </summary>
        </member>
        <member name="F:Crockhead.Table.DataTableWritter.Properties">
            <summary>
            프로퍼티 목록.
            </summary>
        </member>
        <member name="F:Crockhead.Table.DataTableWritter.NoneStringMappingTypes">
            <summary>
            비 문자열 값 타입 목록.
            </summary>
        </member>
        <member name="F:Crockhead.Table.DataTableWritter.m_StringBuilder">
            <summary>
            텍스트 생성기.
            </summary>
        </member>
        <member name="F:Crockhead.Table.DataTableWritter.m_RawTables">
            <summary>
            원시 테이블 목록.
            <para>Dictionary: { Key: {XLSXFilePath}, Value: { List: {RawTable} } }</para>
            </summary>
        </member>
        <member name="F:Crockhead.Table.DataTableWritter.m_DataTables">
            <summary>
            데이터 테이블 목록.
            <para>Dictionary: { Key: {TableGroupName}, Value: Dictionary: { Key: {TableName}, Value: {DataTable} } }</para>
            </summary>
        </member>
        <member name="F:Crockhead.Table.DataTableWritter.m_Logger">
            <summary>
            로거.
            </summary>
        </member>
        <member name="M:Crockhead.Table.DataTableWritter.#ctor(Crockhead.Logging.Logger)">
            <summary>
            생성됨.
            </summary>
        </member>
        <member name="M:Crockhead.Table.DataTableWritter.OnDispose(System.Boolean)">
            <summary>
            해제됨.
            </summary>
        </member>
        <member name="M:Crockhead.Table.DataTableWritter.CreateRawTablesFromXLSXFile(System.String)">
            <summary>
            원시 테이블 목록 생성.
            </summary>
        </member>
        <member name="M:Crockhead.Table.DataTableWritter.CreateDataTableFromRawTable(Crockhead.Table.RawTable)">
            <summary>
            데이터 테이블 생성.
            </summary>
        </member>
        <member name="M:Crockhead.Table.DataTableWritter.CreateCSToFile(System.String,Crockhead.Table.DataTable)">
            <summary>
            CS 파일 생성.
            </summary>
        </member>
        <member name="M:Crockhead.Table.DataTableWritter.CreateJSONToFile(System.String,Crockhead.Table.DataTable)">
            <summary>
            JSON 파일 생성.
            </summary>
        </member>
        <member name="M:Crockhead.Table.DataTableWritter.IntegrateJSONTest(System.String,Crockhead.Table.DataTable)">
            <summary>
            JSON 정합성 테스트.
            </summary>
        </member>
        <member name="T:Crockhead.Table.RawTable">
            <summary>
            원시 테이블. (2차원 배열)
            </summary>
        </member>
        <member name="P:Crockhead.Table.RawTable.FilePath">
            <summary>
            파일 경로.
            </summary>
        </member>
        <member name="P:Crockhead.Table.RawTable.Group">
            <summary>
            그룹.
            </summary>
        </member>
        <member name="P:Crockhead.Table.RawTable.Name">
            <summary>
            이름.
            </summary>
        </member>
        <member name="P:Crockhead.Table.RawTable.Value">
            <summary>
            2차원 배열 데이터.
            </summary>
        </member>
        <member name="M:Crockhead.Table.RawTable.#ctor">
            <summary>
            생성됨.
            </summary>
        </member>
    </members>
</doc>
